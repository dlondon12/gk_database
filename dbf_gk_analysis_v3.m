%% Import data from spreadsheet
% Script for importing data from the following spreadsheet:
%
%    Workbook: /Users/Dennis/Documents/nslclc_gk_dl.xlsx
%    Worksheet: Working
%
% To extend the code for use with different selected data or a different
% spreadsheet, generate a function instead of a script.

% Auto-generated by MATLAB on 2021/01/21 18:54:54

%% Import the data
[~, ~, raw] = xlsread('/Users/Dennis/Documents/nslclc_gk_dl_v3.xlsx','Working');
raw = raw(:,[1,6,8,10:12,26:30,33:35,38:40,43:45,48:50,53:55,58:60,78:87,112:114,128]);
raw(cellfun(@(x) ~isempty(x) && isnumeric(x) && isnan(x),raw)) = {''};
stringVectors = string(raw(:,[3,7,8,14,17,20,23,26,29,41,42,43]));
stringVectors(ismissing(stringVectors)) = '';
raw = raw(:,[1,2,4,5,6,9,10,11,12,13,15,16,18,19,21,22,24,25,27,28,30,31,32,33,34,35,36,37,38,39,40]);

%% Replace non-numeric cells with NaN
R = cellfun(@(x) ~isnumeric(x) && ~islogical(x),raw); % Find non-numeric cells
raw(R) = {NaN}; % Replace non-numeric cells

%% Create output variable
data = reshape([raw{:}],size(raw));

%% Create table
nslclcgkdl = table;

%% Allocate imported array to column variable names
nslclcgkdl.OriginrefID = data(:,1);
nslclcgkdl.dob = data(:,2);
nslclcgkdl.Gender = categorical(stringVectors(:,1));
nslclcgkdl.DiagnosisDatePrimary = data(:,3);
nslclcgkdl.DiagnosisDateBrainMets = data(:,4);
nslclcgkdl.firstGKdate = data(:,5);
nslclcgkdl.BrainMetRsxn = stringVectors(:,2);
nslclcgkdl.BrainMetRsxnReason = categorical(stringVectors(:,3));
nslclcgkdl.WholepartialfractionatedRT = data(:,6);
nslclcgkdl.HospiceDate = data(:,7);
nslclcgkdl.LastScan = data(:,8);
nslclcgkdl.Start1 = data(:,9);
nslclcgkdl.Stop1 = data(:,10);
nslclcgkdl.stopreason1 = categorical(stringVectors(:,4));
nslclcgkdl.Start2 = data(:,11);
nslclcgkdl.Stop2 = data(:,12);
nslclcgkdl.stopreason2 = categorical(stringVectors(:,5));
nslclcgkdl.Start3 = data(:,13);
nslclcgkdl.Stop3 = data(:,14);
nslclcgkdl.stopreason3 = categorical(stringVectors(:,6));
nslclcgkdl.Start4 = data(:,15);
nslclcgkdl.Stop4 = data(:,16);
nslclcgkdl.stopreason4 = categorical(stringVectors(:,7));
nslclcgkdl.Start5 = data(:,17);
nslclcgkdl.Stop5 = data(:,18);
nslclcgkdl.stopreason5 = categorical(stringVectors(:,8));
nslclcgkdl.Start6 = data(:,19);
nslclcgkdl.Stop6 = data(:,20);
nslclcgkdl.stopreason6 = categorical(stringVectors(:,9));
nslclcgkdl.datefirstnewmet = data(:,21);
nslclcgkdl.datesecond = data(:,22);
nslclcgkdl.datethird = data(:,23);
nslclcgkdl.datefourth = data(:,24);
nslclcgkdl.datefifth = data(:,25);
nslclcgkdl.datesixth = data(:,26);
nslclcgkdl.dateseventh = data(:,27);
nslclcgkdl.dateeight = data(:,28);
nslclcgkdl.dateninth = data(:,29);
nslclcgkdl.datetenth = data(:,30);
nslclcgkdl.Histology=stringVectors(:,10);
nslclcgkdl.Mutation=stringVectors(:,11);
%nslclcgkdl.Histology1Smallcell2Adenocarcinoma3SquamousCell4LargeCell5other = data(:,28);
%nslclcgkdl.Mutation = categorical(stringVectors(:,10));
%nslclcgkdl.Mutation1KRAS2ALK3EGFR4PDPDL15other = categorical(stringVectors(:,11));
nslclcgkdl.numtumorstreated=data(:,31);
nslclcgkdl.scans=stringVectors(:,12);

%% Clear temporary variables
clearvars data raw stringVectors R;
%%
data=nslclcgkdl(2:end,:); %pick rows with data
data=data(~isnan(data.LastScan),:); %get rid of patients without last scans or who were never on therapy
metDateInd=30:39; %columns of new mets
%%
mutations=cellfun(@(x) strsplit(x,', '),{data.Mutation{:}}','uniformoutput',0);
load geneclassification.mat
mutationType=unique(geneclassification(:,2));
pdl1=zeros(length(mutations),1);
pdl1num=pdl1;
DNAmet=pdl1;
DNArep=pdl1;
myc=pdl1;
pi3k=pdl1;
RAS=pdl1;
wnt=pdl1;
cellCycle=pdl1;
p53=pdl1;
KRAS=pdl1;
EGFR=pdl1;
for i=1:length(mutations) 
    if mutations{i}{1}=='-'
        DNAmet(i)=NaN;
        DNArep(i)=NaN;
        myc(i)=NaN;
        pi3k(i)=NaN;
        RAS(i)=NaN;
        wnt(i)=NaN;
        cellCycle(i)=NaN;
        p53(i)=NaN;
        pdl1(i)=NaN;
        pdl1num(i)=NaN;
        KRAS(i)=NaN;
        continue
    end
    if nnz(~cellfun(@isempty,strfind(mutations{i},'PDL1')))>0
        pdl1(i)=1;
        pdlnumind=find(~cellfun(@isempty,strfind(mutations{i},'PDL1')));
        pdlsplit=strsplit(mutations{i}{pdlnumind},' ');
        pdlsplit=strsplit(pdlsplit{2},'%');
        pdl1num(i)=str2double(pdlsplit{1});
    end
    for j=1:length(mutations{i})
        geneclass=geneclassification(strcmp(mutations{i}(j),geneclassification(:,1)),2);
        if geneclass=='DNA methylation'
            DNAmet(i)=1;
        elseif geneclass=='DNA repair'
            DNArep(i)=1;
        elseif geneclass=='MYC'
            myc(i)=1;
        elseif geneclass=='PI3K'
            pi3k(i)=1;
        elseif geneclass=='RAS'
            RAS(i)=1;
        elseif geneclass=='WNT'
            wnt(i)=1;
        elseif geneclass=='cell cycle'
            cellCycle(i)=1;
        elseif geneclass=='p53'
            p53(i)=1;
        end
        
        kraslog=strcmp(mutations{i}(j),'KRAS');
        if kraslog
            KRAS(i)=1;
        end
        
        egfrlog=strcmp(mutations{i}(j),'EGFR');
        if egfrlog
            EGFR(i)=1;
        end
    end
end
%%
delta_therapy=data.Start2-data.Stop1; %matrix with columns representing time between therapy
delta_therapy(:,2)=data.Start3-data.Stop2;
delta_therapy(:,3)=data.Start4-data.Stop3;
delta_therapy(:,4)=data.Start5-data.Stop4;
delta_therapy(:,5)=data.Start6-data.Stop5;
delta_therapy(:,6)=NaN*ones(size(delta_therapy,1),1);

%code below gets rid of gaps between therapy that are less than 90 days
%therapies after removed gaps are shifted leftward in the data table
nancells{1}=NaN; %this cell array replaces cells that are newly emptied when data is shifted
nancells{2}=NaN;
nancells{3}='<undefined>';

for i=1:size(delta_therapy,1)
    delta_pt=delta_therapy(i,:); %row under consideration
    j=1;
    while ~isnan(delta_pt(j)) %loop across gaps (gaps have ended when the row contains NaNs)
        if delta_pt(j)>90 %if the gap is >90 days proceed to the next gap
            j=j+1;
        else %if gap is less than 90 days
            data(i,(13+(j-1)*3):26)=data(i,(16+(j-1)*3):29); %shift data to the left
            data(i,27-((j-1)*3):29-((j-1)*3))=nancells; %replace emptied cells with NaNs
            delta_pt(j:(end-1))=delta_pt((j+1):end); %shift the row containing gaps
        end
    end
    delta_therapy(i,:)=delta_pt; %apply to the gap matrix
end
%% shift all therapies 90 days forward, we will count beginning 90 days after cessation of therapy
data.Stop1=data.Stop1+90;
data.Stop2=data.Stop2+90;
data.Stop3=data.Stop3+90;
data.Stop4=data.Stop4+90;
%%
deltaDiag=bsxfun(@minus,data.DiagnosisDateBrainMets,data{:,[12,13,15,16,18,19,21,22]}); %time between initial diagnosis of brain mets and therapy stop and end dates
% exclude=mod(sum(~isnan(deltaDiag),2),2)==1; %if therapy is started and not stopped, there is an odd number of real differences, exclude these rows
% data=data(~exclude,:);
% deltaDiag=deltaDiag(~exclude,:);
% delta_therapy=delta_therapy(~exclude,:);
deltaDiagPos=deltaDiag>0; %diagnoses of brain mets that occurred after therapy was stopped

deltaMets=bsxfun(@minus,permute(data{:,metDateInd},[1,3,2]),data{:,[12,13,15,16,18,19,21,22]}); %time between each new met and start and stop dates of therapy

% pdl1=pdl1(~exclude);
% DNAmet=DNAmet(~exclude);
% DNArep=DNArep(~exclude);
% myc=myc(~exclude);
% pi3=pi3k(~exclude);
% RAS=RAS(~exclude);
% wnt=wnt(~exclude);
% cellCycle=cellCycle(~exclude);
% p53=p53(~exclude);
%%
deltaDiagNeg=deltaDiag<0;
txLog=~isnan(data{:,[13,16,19]}); %treatments that ended

ct=1;
for i=1:size(delta_therapy,1) %loop over each row
    afterTx=find(deltaDiagPos(i,2:2:end),1,'last');
    beforeTxEnd=find(deltaDiagNeg(i,2:2:end));
    allscans=m2xdate(datenum(strsplit(data.scans(i),',')));
    
    if ~isempty(afterTx)
        pt(ct)=i;
        originrefid(ct)=data.OriginrefID(i);
        numtumorstreated(ct)=data.numtumorstreated(i);
        pdl1mat(ct)=pdl1(i);
        pdl1nummat(ct)=pdl1num(i);
        DNAmetmat(ct)=DNAmet(i);
        DNArepmat(ct)=DNArep(i);
        mycmat(ct)=myc(i);
        pi3kmat(ct)=pi3k(i);
        RASmat(ct)=RAS(i);
        wntmat(ct)=wnt(i);
        cellCyclemat(ct)=cellCycle(i);
        p53mat(ct)=p53(i);
        EGFRmat(ct)=EGFR(i);
        KRASmat(ct)=KRAS(i);
        stopreason(ct)=data.(['stopreason',num2str(afterTx)])(i);
        diagafter(ct)=1;
        wbrt(ct)=data.WholepartialfractionatedRT(i);
        mets=squeeze(deltaMets(i,:,:));
        mets(mets<0)=NaN;
        [~,metTxInd]=min(mets);
        noMets=sum(~isnan(mets))==0;
        mets=mets(afterTx*2,metTxInd==afterTx*2 & metTxInd~=noMets);
        censorDate=min([data.LastScan(i),data.(['Start',num2str(afterTx+1)])(i)]);
        censor{ct}=censorDate-data.DiagnosisDateBrainMets(i);
        scansAlign=allscans-data.DiagnosisDateBrainMets(i);
        scansAlign(scansAlign<0)=[];
        scansAlign(scansAlign>censor{ct})=[];
        scansPerPeriod{ct}=scansAlign;
        
        if isempty(beforeTxEnd) && abs(data.LastScan(i)-data.HospiceDate(i))<90
            terminal{ct}=1;
        elseif ~isempty(beforeTxEnd)
            terminal{ct}=1;
        else
            terminal{ct}=0;
        end
        if ~isempty(mets)
            dbf{ct}=mets-deltaDiag(i,afterTx*2);
        else
            dbf{ct}=NaN;
        end
        ct=ct+1;
    else
        diagafter(ct)=0;
    end

    for j=1:length(beforeTxEnd)
        pt(ct)=i;
        originrefid(ct)=data.OriginrefID(i);
        numtumorstreated(ct)=data.numtumorstreated(i);
        pdl1mat(ct)=pdl1(i);
        pdl1nummat(ct)=pdl1num(i);
        DNAmetmat(ct)=DNAmet(i);
        DNArepmat(ct)=DNArep(i);
        mycmat(ct)=myc(i);
        pi3kmat(ct)=pi3k(i);
        RASmat(ct)=RAS(i);
        wntmat(ct)=wnt(i);
        cellCyclemat(ct)=cellCycle(i);
        p53mat(ct)=p53(i);
        EGFRmat(ct)=EGFR(i);
        KRASmat(ct)=KRAS(i);
        stopreason(ct)=data.(['stopreason',num2str(beforeTxEnd(j))])(i);
        wbrt(ct)=data.WholepartialfractionatedRT(i);
        diagafter(ct)=0;
        mets=squeeze(deltaMets(i,:,:));
        mets(mets<0)=NaN;
        [~,metTxInd]=min(mets);
        noMets=sum(~isnan(mets))==0;
        mets=mets(beforeTxEnd(j)*2,metTxInd==beforeTxEnd(j)*2 & metTxInd~=noMets);
        censorDate=min([data.LastScan(i),data.(['Start',num2str(beforeTxEnd(j)+1)])(i)]);
        censor{ct}=censorDate-data.(['Stop',num2str(beforeTxEnd(j))])(i);
        
        scansAlign=allscans-data.(['Stop',num2str(beforeTxEnd(j))])(i);
        scansAlign(scansAlign<0)=[];
        scansAlign(scansAlign>censor{ct})=[];
        scansPerPeriod{ct}=scansAlign;
        
        if j==length(beforeTxEnd) && abs(data.LastScan(i)-data.HospiceDate(i))<90
            terminal{ct}=1;
        elseif j<length(beforeTxEnd)
            terminal{ct}=1;
        else
            terminal{ct}=0;
        end
        if ~isempty(mets)
            dbf{ct}=mets;
        else
            dbf{ct}=NaN;
        end
        ct=ct+1;
    end

end
%%
exclude=cellfun(@(x) x<0,censor);
dbf=dbf(~exclude);
censor=censor(~exclude);
terminal=terminal(~exclude);
wbrt=wbrt(~exclude);
pt=pt(~exclude);
diagafter=diagafter(~exclude);
%mutation=mutation(~exclude);
%histology=histology(~exclude);
numtumorstreated=numtumorstreated(~exclude);
originrefid=originrefid(~exclude);
pdl1mat=pdl1mat(~exclude);
pdl1nummat=pdl1nummat(~exclude);
DNAmetmat=DNAmetmat(~exclude);
DNArepmat=DNArepmat(~exclude);
mycmat=mycmat(~exclude);
pi3kmat=pi3kmat(~exclude);
RASmat=RASmat(~exclude);
wntmat=wntmat(~exclude);
cellCyclemat=cellCyclemat(~exclude);
p53mat=p53mat(~exclude);
KRASmat=KRASmat(~exclude);
EGFRmat=EGFRmat(~exclude);
stopreason=stopreason(~exclude);
scansPerPeriod=scansPerPeriod(~exclude);
%%
lastScanPerPeriod=zeros(size(censor));
for i=1:79
if ~isempty(scansPerPeriod{i})
lastScanPerPeriod(i)=scansPerPeriod{i}(end);
censor{i}=min([lastScanPerPeriod(i),censor{i}]);
else
lastScanPerPeriod(i)=NaN;
censor{i}=NaN;
end
end
%discrepancyID=originrefid(lastScanPerPeriod~=censormat)';

%trueDiscrepancy=[1,1,1,1,0,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,-1,1,1,1,1];

exclude=false(size(censor));
for i=1:79
    if censor{i}==0 || isnan(censor{i})
        exclude(i)=true;
    end
end

dbf=dbf(~exclude);
censor=censor(~exclude);
terminal=terminal(~exclude);
wbrt=wbrt(~exclude);
pt=pt(~exclude);
diagafter=diagafter(~exclude);
%mutation=mutation(~exclude);
%histology=histology(~exclude);
numtumorstreated=numtumorstreated(~exclude);
originrefid=originrefid(~exclude);
pdl1mat=pdl1mat(~exclude);
pdl1nummat=pdl1nummat(~exclude);
DNAmetmat=DNAmetmat(~exclude);
DNArepmat=DNArepmat(~exclude);
mycmat=mycmat(~exclude);
pi3kmat=pi3kmat(~exclude);
RASmat=RASmat(~exclude);
wntmat=wntmat(~exclude);
cellCyclemat=cellCyclemat(~exclude);
p53mat=p53mat(~exclude);
KRASmat=KRASmat(~exclude);
EGFRmat=EGFRmat(~exclude);
stopreason=stopreason(~exclude);
scansPerPeriod=scansPerPeriod(~exclude);

%%
offbcwell= stopreason=='1' | isundefined(stopreason);
params=[diagafter',offbcwell',RASmat',pdl1mat',p53mat',pi3kmat',cellCyclemat',DNArepmat',DNAmetmat',numtumorstreated'];
%params=[diagafter',offbcwell];
%params=params(:,sort(paramscur));
%int=reshape(bsxfun(@times,params,permute(params,[1,3,2])),79,size(params,2).^2);
%int=int(:,find(tril(ones(size(params,2)),-1)));
%params=[params,int];

paramscur=1:10;
paramsall=1:size(params,2);

dbfkp=cellfun(@(x) x(1),dbf);
censormat=horzcat(censor{:});

%%
cens=min([dbfkp',censormat'],[],2,'omitnan');

[b,logl,H,stats]=coxphfit(params(:,paramscur),cens,'Censoring',isnan(dbfkp)');
aic=2*(length(paramscur))-2*logl;
bic=length(paramscur)*log(size(params,1))-2*logl;

aicold=Inf;
minaicind=[];
ct=0;
while aic<aicold
    aicold=aic;
    %bicold=bic;
    if minaicind<=length(paramscur)
        paramscur(minaicind)=[];
    elseif minaicind>length(paramscur)
        paramscur(end+1)=paramsToAdd(minaicind-length(paramscur));
    end
    paramsToAdd=find(~ismember(paramsall,paramscur));
    
    aicnew=zeros(1,length(paramscur)+length(paramsToAdd));
    pnew=aicnew;
    for i=1:length(paramscur)
        paramsRm=paramscur;
        paramsRm(i)=[];
        [b,logl,H,stats]=coxphfit(params(:,paramsRm),cens,'Censoring',isnan(dbfkp)');
       aicnew(i)=2*length(paramsRm)-2*logl;
       %bicnew(i)=length(paramsRm)*log(size(params,1))-2*logl;
    end
    
    for i=1:length(paramsToAdd)
        paramsAdd=[paramscur,paramsToAdd(i)];
        [b,logl,H,stats]=coxphfit(params(:,paramsAdd),cens,'Censoring',isnan(dbfkp)');
        aicnew(length(paramscur)+i)=2*length(paramsAdd)-2*logl;
        %bicnew(length(paramscur)+i)=length(paramsAdd)*log(size(params,1))-2*logl;
        %pnew(length(paramscur)+i)=stats.p(end);
    end
    %aicnew(pnew>0.5)=NaN;
    [minaic,minaicind]=min(aicnew);
    aic=minaic;
    %bicnew(pnew>0.5)=NaN;
    %[minbic,minbicind]=min(bicnew);
    %bic=minbic;
    ct=ct+1;
    disp([num2str(ct),' iterations completed'])
end
%%

colors=get(gca,'colororder');

ax1(1)=subplot(1,2,1);

[km,kmll,kmul,time]=kmfun(dbf(offbcwell==1),censor(offbcwell==1));
time=time./365;
l(1)=plot(time,km,'linewidth',2,'color',colors(1,:));
hold on
patch([time,fliplr(time)],[kmll,fliplr(kmul)],mean([colors(1,:);1,1,1]),'FaceAlpha',0.5,'EdgeColor','none');
%legplot(1)=plot(1,1,'color','k','LineWidth',2);
%legplot(2)=patch([0 0 1 1],[0,1,1,0],[0.75,0.75,0.75],'FaceAlpha',0.5,'EdgeColor','none');
%legplot(3)=plot(1,1,'linestyle','--','color','k','LineWidth',2);


[km,kmll,kmul,time]=kmfun(dbf(offbcwell==0),censor(offbcwell==0));
time=time./365;
l(2)=plot(time,km,'linewidth',2,'color',colors(2,:));
patch([time,fliplr(time)],[kmll,fliplr(kmul)],mean([colors(2,:);1,1,1]),'FaceAlpha',0.5,'EdgeColor','none');

set(ax1(1),'tickdir','out','box','off','YTick',0:0.25:1,'FontSize',12)
ylab=ylabel({'Cumulative proobability of';'no new brain metastases'},'FontSize',10);
ylab.Position(1:2)=[-1.75,0.5];
xlabel('Time (years)')
ylim([-0.4 1])
xlim([0 8])


[leg,icons,plts,txt]=legend([l(1:2)],'Well','Intolerance/progression');
leg.Box='Off';
leg.Position(1:2)=[0.2,0.25];

for i=3:2:5
    icons(i).XData(1)=icons(i).XData(2)-0.05;
end
%icons(12).XData(1:2)=0.15;

text(-0.37,1.05,'A','units','normalized','fontsize',16,'fontweight','bold')
censorkp=min([censormat;dbfkp]);
ax2(1)=axes('Position',ax1(1).Position);
histogram(-(censorkp(offbcwell==1)/365),-8:0.25:0,'FaceColor',colors(1,:),'normalization','cumcount')
hold on
histogram(-(censorkp(offbcwell==0)/365),-8:0.25:0,'FaceColor',colors(2,:),'normalization','cumcount')
ylim([0 250])
xlim([-8 0])
set(ax2(1),'XAxisLocation','top','YAxisLocation','left','Color','none','YColor','k',...
    'XDir','reverse','Xcolor','none','box','off','tickdir','out','YTick',0:20:40);
ylab2=ylabel('At risk','FontSize',10);
ylab2.Position(1:2)=[1.75,20];


ax1(2)=subplot(1,2,2);
[km,kmll,kmul,time]=kmfun(dbf(RASmat==0),censor(RASmat==0));
time=time./365;
l(3)=plot(time,km,'linewidth',2,'color',colors(3,:));
hold on
patch([time,fliplr(time)],[kmll,fliplr(kmul)],mean([colors(3,:);1,1,1]),'FaceAlpha',0.5,'EdgeColor','none');


[km,kmll,kmul,time]=kmfun(dbf(RASmat==1),censor(RASmat==1));
time=time./365;
l(4)=plot(time,km,'linewidth',2,'color',colors(4,:));
patch([time,fliplr(time)],[kmll,fliplr(kmul)],mean([colors(4,:);1,1,1]),'FaceAlpha',0.5,'EdgeColor','none');

[leg2,icons2,plts2,txt2]=legend(l(3:4),'No RAS/RTK mutation','RAS/RTKmutation');
leg2.Box='Off';
leg2.Position(1:2)=[0.65,0.25];

for i=3:2:5
    icons2(i).XData(1)=icons2(i).XData(2)-0.05;
end

xlabel('Time (years)')
ylim([-0.4 1])
xlim([0 8])
set(ax1(2),'tickdir','out','box','off','YTick',0:0.25:1,'FontSize',12)
text(-0.25,1.05,'B','units','normalized','fontsize',16,'fontweight','bold')

ax2(2)=axes('Position',ax1(2).Position);
histogram(-(censorkp(RASmat==1)/365),-8:0.25:0,'FaceColor',colors(4,:),'normalization','cumcount')
hold on
histogram(-(censorkp(RASmat==0)/365),-8:0.25:0,'FaceColor',colors(3,:),'normalization','cumcount')
ylim([0 250])
xlim([-8 0])
set(ax2(2),'XAxisLocation','top','YAxisLocation','left','Color','none','YColor','k',...
    'XDir','reverse','XAxisLocation','top','Xcolor','none','box','off','tickdir','out','YTick',0:20:40);
%%
[b,logl,H,stats]=coxphfit(params(:,paramscur),cens,'Censoring',isnan(dbfkp)');
kmtable=table({'Diagnosed after','Well','RAS/RTK'}',...
    exp(b),exp(b-norminv(0.975)*stats.se),exp(b+norminv(0.975)*stats.se),stats.p,...
    'VariableNames',{'Predictor','Odds ratio','Lower CI','Upper CI','p'});
%%
colors=get(gca,'colororder');
nDays=ceil(max(censormat));
scanRatePerPatient=zeros(size(scansPerPeriod,2),nDays);
for i=1:73
scanDays=unique(discretize(scansPerPeriod{i},0:1:nDays));
scanRatePerPatient(i,:)=histcounts(scanDays,0:1:nDays);
if max(scanDays<nDays)
scanRatePerPatient(i,(max(scanDays)+1):end)=NaN;
end
if ~isnan(dbfkp(i))
scanRatePerPatient(i,(ceil(dbfkp)+1):end)=NaN;
end
end
uncensorDays=sum(~isnan(scanRatePerPatient));

[km,~,~,time]=kmfun(dbf,censor);

l(1)=plot(time/365,km,'LineWidth',2);
ylim([0,1])
ax=gca;
ylabel({'Cumulative probability of';'no new brain metastases'})
xlabel('Time (years)')
yyaxis right

mcscans=cumsum(sum(scanRatePerPatient,'omitnan')./uncensorDays);
mcscans=reshape(repmat(mcscans,2,1),[],1);
mcscans=mcscans(1:end-1);
time=1:nDays;
time=reshape(repmat(time,2,1),[],1);
time=time(2:end);
l(2)=plot(time/365,mcscans,'LineWidth',2);
ylabel('Cumulative scans per patient')

set(ax,'box','off','tickdir','out','FontSize',12)
ax.YAxis(1).Color=colors(1,:);
%%
censormat=horzcat(censor{:})';
termmat=horzcat(terminal{:})';
ndbf=cellfun(@(x) nnz(~isnan(x)),dbf)';

dbfmat=NaN(length(dbf),8);
for i=1:length(dbf)
    dbfmat(i,1:length(dbf{i}))=dbf{i};
end
dbfdiff=diff([zeros(length(dbf),1),dbfmat],1,2)-1;
dbfdiff(isnan(dbfdiff))=0;

laststep=zeros(length(dbf),1);
lastevent=laststep;
for i=1:length(dbf)
    if nnz(~isnan(dbf{i}))==0
        laststep(i)=censormat(i);
        lastevent(i)=1;
    else
        laststep(i)=censormat(i)-dbf{i}(find(~isnan(dbf{i}),1,'last'));
        lastevent(i)=find(~isnan(dbf{i}),1,'last')+1;
    end
end
laststep=laststep-termmat;
laststep(laststep<0)=0;
for i=1:size(dbfmat,1)
    if nnz(~isnan(dbfmat(i,:)))>0
        if dbfmat(i,find(~isnan(dbfmat(i,:)),1,'last'),:)==censormat(i)
            censormat(i)=censormat(i)+1;
        end
    end
end
%%
maxT=max(censormat);
t=NaN(size(dbfmat,1),maxT);
allT=1:maxT;
for i=1:size(dbfmat,1)
    t(i,1:censormat(i))=allT(1:censormat(i));
end

offbcwell= stopreason=='1' | isundefined(stopreason);
params=[diagafter',offbcwell',RASmat',pdl1mat',p53mat',pi3kmat',cellCyclemat',DNArepmat',DNAmetmat',numtumorstreated'];
%params=[diagafter',offbcwell];
%params=params(:,sort(paramscur));
%int=reshape(bsxfun(@times,params,permute(params,[1,3,2])),79,size(params,2).^2);
%int=int(:,find(tril(ones(size(params,2)),-1)));
%params=[params,int];

paramscur=1:10;
paramsall=1:size(params,2);

f=@(x)loglik(x,dbfmat,censormat,termmat,t,params(:,paramscur));
cons=@(x)sumprob(x,params(:,paramscur),t);
[x,logl]=fmincon(f,[1,1,0,0,zeros(1,length(paramscur)*2)]',[],[],[],[],zeros(2,1),100*ones(2,1),cons);
aic=2*(length(paramscur))+2*logl;
bic=length(paramscur)*log(size(params,1))+2*logl;

aicold=Inf;
aic=10^4;
minaicind=[];
ct=0;
tic
while aic<aicold
    aicold=aic;
    %bicold=bic;
    if minaicind<=length(paramscur)
        paramscur(minaicind)=[];
    elseif minaicind>length(paramscur)
        paramscur(end+1)=paramsToAdd(minaicind-length(paramscur));
    end
    paramsToAdd=find(~ismember(paramsall,paramscur));
    
    aicnew=zeros(1,length(paramscur)+length(paramsToAdd));
    pnew=aicnew;
    for i=1:length(paramscur)
        paramsRm=paramscur;
        paramsRm(i)=[];
        f=@(x)loglik(x,dbfmat,censormat,termmat,t,params(:,paramsRm));
        cons=@(x)sumprob(x,params(:,paramsRm),t);
        [x,logl]=fmincon(f,[1,1,0,0,zeros(1,length(paramsRm)*2)]',[],[],[],[],zeros(2,1),100*ones(2,1),cons);
        aicnew(i)=2*length(paramsRm)+2*logl;
       %bicnew(i)=length(paramsRm)*log(size(params,1))-2*logl;
       toc
    end
    
    for i=1:length(paramsToAdd)
        paramsAdd=[paramscur,paramsToAdd(i)];
        cons=@(x)sumprob(x,params(:,paramsAdd),t);
        f=@(x)loglik(x,dbfmat,censormat,termmat,t,params(:,paramsAdd));
        [x,logl]=fmincon(f,[1,1,0,0,zeros(1,length(paramsAdd)*2)]',[],[],[],[],zeros(2,1),100*ones(2,1),cons);
        aicnew(length(paramscur)+i)=2*length(paramsAdd)+2*logl;
        %bicnew(length(paramscur)+i)=length(paramsAdd)*log(size(params,1))-2*logl;
        %pnew(length(paramscur)+i)=stats.p(end);
        toc
    end
    %aicnew(pnew>0.5)=NaN;
    [minaic,minaicind]=min(aicnew);
    aic=minaic;
    %bicnew(pnew>0.5)=NaN;
    %[minbic,minbicind]=min(bicnew);
    %bic=minbic;
    ct=ct+1;
    disp([num2str(ct),' iterations completed'])
    toc
end

%%
%f=@(x)loglik(x,dbfdiff,laststep,lastevent,termmat,params);
tic
maxT=max(censormat);
t=NaN(size(dbfmat,1),maxT);
allT=(1:maxT)/365;
%mult=t;
for i=1:size(dbfmat,1)
    t(i,1:censormat(i))=allT(1:censormat(i));
    %if nnz(~isnan(dbfmat(i,:)))>0
    %    mult(i,1:dbfmat(i,1))=0;
    %    if nnz(~isnan(dbfmat(i,:)))>1
    %        for j=2:nnz(~isnan(dbfmat(i,:)))
    %            mult(i,(dbfmat(i,j-1)+1):dbfmat(i,j))=j-1;
    %        end
    %        mult(i,(dbfmat(i,j)+1):censormat(i))=j;
    %    end
    %end
end
%paramscur=2;
f=@(x)loglik(x,dbfmat,censormat,termmat,t,params(:,paramscur));
cons=@(x)sumprob(x,params(:,paramscur),t);

%A=diag(ones(5,1),1);
%A(:,1)=1;
tic
x=fmincon(f,[1,1,0,0,zeros(1,length(paramscur)*2)]',[],[],[],[],zeros(2,1),100*ones(2,1),cons);
x=fminsearch(f,x);
[~,~,~,~,~,hessian]=fminunc(f,x);
rescale=[1e2*ones(1,4),ones(1,12)]';
rescaleHessian=rescale*rescale';
x=x./rescale;
se=sqrt(diag(inv(hessian.*rescaleHessian)));
%%
for i=1:79
f=@(x)loglik(x,dbfmat(i,:),censormat(i),termmat(i),t(i,:),params(i,paramscur));
[~,~,~,~,grad(:,i),hessian(:,:,i)]=fminunc(f,x2,options);
end
%%
pval=(1-normcdf(abs(x./sqrt(diag(inv(hessian))))))*2;
ci95=norminv(0.975)*sqrt(diag(inv(hessian)));
ci95=[x-ci95,x+ci95];
toc

%%
tic
numparams=(length(x)-4)/2;
pr=x(1).*exp(sum(bsxfun(@times,x(5:4+numparams)',params(:,paramscur)),2,'omitnan'));
pd=x(2).*exp(sum(bsxfun(@times,x(5+numparams:4+numparams*2)',params(:,paramscur)),2,'omitnan'));

br=x(3);
bd=x(4);

negflipr=(2*ceil((sign(br)+1)/2)-1);
negflipd=(2*ceil((sign(bd)+1)/2)-1);
pr=0.5 - negflipr/2 + negflipr.*(0.5 - negflipr/2 + negflipr.*pr).*exp(bsxfun(@times,-abs(br),allT));
pd=0.5 - negflipd/2 + negflipd.*(0.5 - negflipd/2 + negflipd.*pd).*exp(bsxfun(@times,-abs(bd),allT));

dbfsimind=NaN(size(dbfmat,1),20,1000);
dbfsimmat=zeros(size(dbfmat,1),size(pr,2),1000);
censorsim=NaN(size(dbfmat,1),1000);
termindmat=censorsim;
termsimmat=zeros(size(dbfmat,1),1000);
for j=1:1000
    prnew=pr;
    pdnew=pd;
randnum=random('Uniform',0,1,size(prnew));
dbfsim=double(randnum<=prnew);
termsim=double(randnum>prnew & randnum<=(prnew+pdnew));

dbfsimpts=find(sum(dbfsim,2)>0);

for i=1:size(prnew,1)
    dbfpt=dbfsim(i,:);
    termpt=termsim(i,:);
    
    dbfind=find(dbfpt,1);
    termind=find(termpt,1);
    ct=1;
    while ~isempty(dbfind) || ~isempty(termind)
        if (~isempty(dbfind) && ~isempty(termind) && termind<dbfind) || (~isempty(termind) && isempty(dbfind))
            dbfpt(termind+1:end)=NaN;
            termsimmat(i,j)=1;
            termindmat(i,j)=termind;
            break
        else
            %prnew(i,dbfind+1:end)=prnew(i,dbfind+1:end);
            %pdnew(i,dbfind+1:end)=pdnew(i,dbfind+1:end);
            
            dbfsimind(i,ct,j)=dbfind;
            
            dbfpt(dbfind+1:end)=double(randnum(i,dbfind+1:end)<=prnew(i,dbfind+1:end));
            termpt(dbfind+1:end)=double(randnum(i,dbfind+1:end)>prnew(i,dbfind+1:end) & randnum(i,dbfind+1:end)<=(prnew(i,dbfind+1:end)+pdnew(i,dbfind+1:end)));
            
            termind=dbfind+find(termpt(dbfind+1:end),1);
            dbfind=dbfind+find(dbfpt(dbfind+1:end),1);
            
            ct=ct+1;
            
        end
    end
    dbfsim(i,:)=dbfpt;
end

censordist=censormat(termmat==0);
%inds=[randperm(length(censordist)),randperm(length(censordist))];
%inds=inds(1:size(dbfsim,1));
censorsim(:,j)=censordist(unidrnd(length(censordist),size(dbfsim,1),1));
%censorsim(:,j)=censordist(inds);
dbfsim=double(dbfsim);
for i=1:size(dbfsim,1)
    if censorsim(i,j)<termindmat(i,j)
        termsimmat(i,j)=0;
        termindmat(i,j)=NaN;
    elseif censorsim(i,j)>=termindmat(i,j)
        censorsim(i,j)=termindmat(i,j);
    end
    dbfsim(i,censorsim(i,j)+1:end)=NaN;
    %dbfsimmat(i,dbfsimmat(i,:,j)>=censorsim(i,j),j)=NaN;
end
dbfsimmat(:,:,j)=dbfsim;
if mod(j,100)==0
    toc
end
end
%%
colors=get(gca,'colororder');

ax1(1)=subplot(1,2,1);
[mcf,mcfll,mcful,time]=mcfun(dbf(offbcwell==1),censor(offbcwell==1));
time=time./365;
l(1)=plot(time,mcf,'linewidth',2,'color',colors(1,:));
hold on
patch([time,fliplr(time)],[mcfll,fliplr(mcful)],mean([colors(1,:);1,1,1]),'FaceAlpha',0.5,'EdgeColor','none');
legplot(1)=plot(1,1,'color','k','LineWidth',2);
legplot(2)=patch([0 0 1 1],[0,1,1,0],[0.75,0.75,0.75],'FaceAlpha',0.5,'EdgeColor','none');
legplot(3)=plot(1,1,'linestyle','--','color','k','LineWidth',2);


[mcf,mcfll,mcful,time]=mcfun(dbf(offbcwell==0),censor(offbcwell==0));
time=time./365;
l(2)=plot(time,mcf,'linewidth',2,'color',colors(2,:));
patch([time,fliplr(time)],[mcfll,fliplr(mcful)],mean([colors(2,:);1,1,1]),'FaceAlpha',0.5,'EdgeColor','none');

plot((1:size(dbfsim,2))/365,cumsum(squeeze(mean(mean(dbfsimmat(offbcwell==1,:,:),1,'omitnan'),3,'omitnan'))),'linewidth',2,'color',colors(1,:),'linestyle','--')
hold on
plot((1:size(dbfsim,2))/365,cumsum(squeeze(mean(mean(dbfsimmat(offbcwell==0,:,:),1,'omitnan'),3,'omitnan'))),'linewidth',2,'color',colors(2,:),'linestyle','--')

set(ax1(1),'tickdir','out','box','off','YTick',0:4,'FontSize',12)
ylab=ylabel('Cumulative new tumor occurences','FontSize',10);
ylab.Position(1:2)=[-1.5,2];
xlabel('Time (years)')
ylim([-2 4])
xlim([0 8])


[leg,icons,plts,txt]=legend([l(1:2)],'Well','Intolerance/progression');
leg.Box='Off';
leg.Position(1:2)=[0.2,0.35];
legplot(1).Visible='off';
legplot(2).Visible='off';
legplot(3).Visible='off';
for i=3:2:5
    icons(i).XData(1)=icons(i).XData(2)-0.05;
end
%icons(12).XData(1:2)=0.15;

text(-0.37,1.05,'A','units','normalized','fontsize',16,'fontweight','bold')

ax2(1)=axes('Position',ax1(1).Position);
histogram(-(horzcat(censor{offbcwell==1})/365),-8:0.25:0,'FaceColor',colors(1,:),'normalization','cumcount')
hold on
histogram(-(horzcat(censor{offbcwell==0})/365),-8:0.25:0,'FaceColor',colors(2,:),'normalization','cumcount')
ylim([0 200])
xlim([-8 0])
set(ax2(1),'XAxisLocation','top','YAxisLocation','left','Color','none','YColor','k',...
    'XDir','reverse','Xcolor','none','box','off','tickdir','out','YTick',0:20:40);
ylab2=ylabel('At risk','FontSize',10);
ylab2.Position(1:2)=[1.5,20];


ax1(2)=subplot(1,2,2);
[mcf,mcfll,mcful,time]=mcfun(dbf(RASmat==0),censor(RASmat==0));
time=time./365;
l(3)=plot(time,mcf,'linewidth',2,'color',colors(3,:));
hold on
patch([time,fliplr(time)],[mcfll,fliplr(mcful)],mean([colors(3,:);1,1,1]),'FaceAlpha',0.5,'EdgeColor','none');


[mcf,mcfll,mcful,time]=mcfun(dbf(RASmat==1),censor(RASmat==1));
time=time./365;
l(4)=plot(time,mcf,'linewidth',2,'color',colors(4,:));
patch([time,fliplr(time)],[mcfll,fliplr(mcful)],mean([colors(4,:);1,1,1]),'FaceAlpha',0.5,'EdgeColor','none');

[leg2,icons2,plts2,txt2]=legend(l(3:4),'No RAS/RTK mutation','RAS/RTKmutation');
leg2.Box='Off';
leg2.Position(1:2)=[0.65,0.35];

for i=3:2:5
    icons2(i).XData(1)=icons2(i).XData(2)-0.05;
end

plot((1:size(dbfsim,2))/365,cumsum(squeeze(mean(mean(dbfsimmat(RASmat==0,:,:),1,'omitnan'),3,'omitnan'))),'linewidth',2,'color',colors(3,:),'linestyle','--')
hold on
plot((1:size(dbfsim,2))/365,cumsum(squeeze(mean(mean(dbfsimmat(RASmat==1,:,:),1,'omitnan'),3,'omitnan'))),'linewidth',2,'color',colors(4,:),'linestyle','--')

xlabel('Time (years)')
ylim([-2 4])
xlim([0 8])
set(ax1(2),'tickdir','out','box','off','YTick',0:4,'FontSize',12)
text(-0.25,1.05,'B','units','normalized','fontsize',16,'fontweight','bold')

ax2(2)=axes('Position',ax1(2).Position);
histogram(-(horzcat(censor{RASmat==1})/365),-8:0.25:0,'FaceColor',colors(4,:),'normalization','cumcount')
hold on
histogram(-(horzcat(censor{RASmat==0})/365),-8:0.25:0,'FaceColor',colors(3,:),'normalization','cumcount')
ylim([0 200])
xlim([-8 0])
set(ax2(2),'XAxisLocation','top','YAxisLocation','left','Color','none','YColor','k',...
    'XDir','reverse','XAxisLocation','top','Xcolor','none','box','off','tickdir','out','YTick',0:20:40);
%%
mcftablefull=table({'pr0','pd0','lambdar','lambdad','wellr','RASr','pi3kr','DNArepr',...
    'DNAmetr','tumorsr','welld','RASd','pi3kd','DNArepd','DNAmetd','tumorsd'}',x,...
x+norminv(0.975)*se,x-norminv(0.975)*se,...
(1-normcdf(abs(x)./se))*2);

mcftable=table({'wellr','RASr','pi3kr','DNArepr','DNAmetr','tumorsr'}',exp(x(5:10)),...
exp(x(5:10)-norminv(0.975)*se(5:10)),exp(x(5:10)+norminv(0.975)*se(5:10)),...
(1-normcdf(abs(x(5:10))./se(5:10)))*2);

%%

ax1=gca;

[mcf,mcfll,mcful,time]=mcfun(dbf(sum(dbfmat<365,2)>0),censor(sum(dbfmat<365,2)>0));
plot(time/365,mcf,'linewidth',2);

hold on
[mcf,mcfll,mcful,time]=mcfun(dbf(sum(dbfmat<365/2,2)>0),censor(sum(dbfmat<365/2,2)>0));
plot(time/365,mcf,'linewidth',2);

[mcf,mcfll,mcful,time]=mcfun(dbf(sum(dbfmat<365/4,2)>0),censor(sum(dbfmat<365/4,2)>0));
plot(time/365,mcf,'linewidth',2);

xlabel('Time (years)')
ylab=ylabel('Cumulative new tumor occurences','FontSize',10);
ylab.Position(1:2)=[-0.75,3];
xlim([0 8])
ylim([-3 6]);
set(ax1,'tickdir','out','box','off','YTick',0:2:8,'FontSize',12)

[leg,icons,plts,txt]=legend('New brain met within 12 months','New brain met within 6 months','New brain met within 3 months');
set(leg,'box','off')
leg.Position(1:2)=[0.3,0.3];
for i=4:2:8
    icons(i).XData(1)=icons(i).XData(2)-0.05;
end

ax2=axes('Position',ax1.Position);

histogram(-horzcat(censor{sum(dbfmat<365,2)>0})/365,-8:0.25:0,'FaceColor',colors(1,:),'normalization','cumcount')
hold on
histogram(-horzcat(censor{sum(dbfmat<365/2,2)>0})/365,-8:0.25:0,'FaceColor',colors(2,:),'normalization','cumcount')
histogram(-horzcat(censor{sum(dbfmat<365/4,2)>0})/365,-8:0.25:0,'FaceColor',colors(3,:),'normalization','cumcount')
ylim([0 200])
xlim([-8 0])

set(ax2,'XAxisLocation','top','YAxisLocation','left','Color','none','YColor','k',...
    'XDir','reverse','XAxisLocation','top','Xcolor','none','box','off','tickdir','out','YTick',0:10:20);
ylab2=ylabel('At risk','FontSize',10);
ylab2.Position(1:2)=[0.75,10];
%%
ax1(1)=subplot(1,2,1);

[mcf,mcfll,mcful,time]=mcfun(dbf(KRASmat==1 & EGFRmat==0),censor(KRASmat==1 & EGFRmat==0));
plot(time/365,mcf,'linewidth',2,'color',colors(5,:));

hold on
[mcf,mcfll,mcful,time]=mcfun(dbf(KRASmat==0 & EGFRmat==1),censor(KRASmat==0 & EGFRmat==1));
plot(time/365,mcf,'linewidth',2,'color',colors(6,:));

[mcf,mcfll,mcful,time]=mcfun(dbf(KRASmat==0 & EGFRmat==0 & RASmat==1),censor(KRASmat==0 & EGFRmat==0 & RASmat==1));
plot(time/365,mcf,'linewidth',2,'color',colors(4,:));

[mcf,mcfll,mcful,time]=mcfun(dbf(RASmat==0),censor(RASmat==0));
plot(time/365,mcf,'linewidth',2,'color',colors(3,:));

xlabel('Time (years)')
ylab=ylabel('Cumulative new tumor occurences','FontSize',10);
ylab.Position(1:2)=[-2,3];
xlim([0 8])
ylim([-3 6]);
set(ax1(1),'tickdir','out','box','off','YTick',0:2:8,'FontSize',12)
text(-0.5,1.05,'A','units','normalized','fontsize',16,'fontweight','bold')

ax2(1)=axes('Position',ax1(1).Position);

h(4)=histogram(-horzcat(censor{RASmat==0})/365,-8:0.25:0,'FaceColor',colors(3,:),'normalization','cumcount');
hold on
h(1)=histogram(-horzcat(censor{KRASmat==1 & EGFRmat==0})/365,-8:0.25:0,'FaceColor',colors(5,:),'normalization','cumcount');
h(3)=histogram(-horzcat(censor{KRASmat==0 & EGFRmat==0 & RASmat==1})/365,-8:0.25:0,'FaceColor',colors(4,:),'normalization','cumcount');
h(2)=histogram(-horzcat(censor{KRASmat==0 & EGFRmat==1})/365,-8:0.25:0,'FaceColor',colors(6,:),'normalization','cumcount');

ylim([0 200])
xlim([-8 0])

set(ax2(1),'XAxisLocation','top','YAxisLocation','left','Color','none','YColor','k',...
    'XDir','reverse','XAxisLocation','top','Xcolor','none','box','off','tickdir','out','YTick',0:10:20);
ylab2=ylabel('At risk','FontSize',10);
ylab2.Position(1:2)=[2,10];

ax1(2)=subplot(1,2,2);

[km,kmll,kmul,time]=kmfun(dbf(KRASmat==1 & EGFRmat==0),censor(KRASmat==1 & EGFRmat==0));
plot(time/365,km,'linewidth',2,'color',colors(5,:));

hold on
[km,kmll,kmul,time]=kmfun(dbf(KRASmat==0 & EGFRmat==1),censor(KRASmat==0 & EGFRmat==1));
plot(time(1:end-1)/365,km(1:end-1),'linewidth',2,'color',colors(6,:));

[km,kmll,kmul,time]=kmfun(dbf(KRASmat==0 & EGFRmat==0 & RASmat==1),censor(KRASmat==0 & EGFRmat==0 & RASmat==1));
plot(time/365,km,'linewidth',2,'color',colors(4,:));

[km,kmll,kmul,time]=kmfun(dbf(RASmat==0),censor(RASmat==0));
plot(time/365,km,'linewidth',2,'color',colors(3,:));

xlabel('Time (years)')
ylab12=ylabel({'Cumulative probability of';'no new brain metastases'},'FontSize',10);
%ylab.Position(1:2)=[-0.25,3];

xlim([0 8])
ylim([-0.5 1]);

set(ax1(2),'tickdir','out','box','off','YTick',0:0.25:1,'FontSize',12)
text(-0.25,1.05,'B','units','normalized','fontsize',16,'fontweight','bold')

[leg,icons,plts,txt]=legend('KRAS mutation only','EGFR mutation only','Other RAS/RTK mutation','No RAS/RTK mutation');
set(leg,'box','off')
leg.Position(1:2)=[0.65,0.3];
for i=5:2:11
    icons(i).XData(1)=icons(i).XData(2)-0.05;
end

ax2(2)=axes('Position',ax1(2).Position);

h(4)=histogram(-censorkp(RASmat==0)/365,-8:0.25:0,'FaceColor',colors(3,:),'normalization','cumcount');
hold on
h(1)=histogram(-censorkp(KRASmat==1 & EGFRmat==0)/365,-8:0.25:0,'FaceColor',colors(5,:),'normalization','cumcount');
h(3)=histogram(-censorkp(KRASmat==0 & EGFRmat==0 & RASmat==1)/365,-8:0.25:0,'FaceColor',colors(4,:),'normalization','cumcount');
h(2)=histogram(-censorkp(KRASmat==0 & EGFRmat==1)/365,-8:0.25:0,'FaceColor',colors(6,:),'normalization','cumcount');

ylim([0 200])
xlim([-8 0])

ylab22=ylabel('At risk','FontSize',10);
ylab22.Position(1:2)=[2,10];
set(ax2(2),'XAxisLocation','top','YAxisLocation','left','Color','none','YColor','k',...
    'XDir','reverse','XAxisLocation','top','Xcolor','none','box','off','tickdir','out','YTick',0:10:20,'Position',ax1(2).Position);

pause(0.1)
set(ax2(1),'Position',ax1(1).Position);
set(ax2(2),'Position',ax1(2).Position);





%%
genecur={'RAS','p53','PI3K','cell cycle','DNA methylation','DNA repair'};

genelabel={'RAS/RTK','p53','PI3K','Cell cycle','DNA methylation','DNA repair'};

ax(1)=subplot(2,3,1);
ct=0;
labs=string([]);
labticks=[];
for i=1:3
mutationlog=horzcat(mutations{unique(pt)})'==geneclassification(:,1)';
mutationclass=mutationlog(:,geneclassification(:,2)==genecur{i});
[~,mutationclass]=find(mutationclass);

[N,~,bin]=histcounts(mutationclass,0.5:1:nnz(geneclassification(:,2)==genecur{i})+0.5);
breakaxis=N>7;
N(breakaxis)=N(breakaxis)-10;
b(i)=barh((ct+1):(ct+nnz(geneclassification(:,2)==genecur{i})),N,'FaceColor',colors(i,:));
labs=[labs;geneclassification(geneclassification(:,2)==genecur{i},1)];
labticks=[labticks,(ct+1):(ct+nnz(geneclassification(:,2)==genecur{i}))];
text(7,ct-1,genelabel{i},'horizontalalignment','center','fontsize',11,'fontweight','bold','color',mean([colors(i,:);0,0,0]))
ct=ct+nnz(geneclassification(:,2)==genecur{i})+5;
set(gca,'YTick',labticks,'YTickLabel',join([repmat(string('\color{black}'),length(labs),1),labs]),...
    'tickdir','out','YDir','reverse','box','off','YColor','w','XTick',0:5:10,'XTickLabel',{'0','5','20'});
%ax(1).YRuler.Axle.LineStyle = 'none';
hold on
end
xlim([0 14])
ylim([0 37])
xlabel('Number of mutations')
breakbox=annotation('textbox',[0.225,0.338,0.01,0.03],'string','// ','linestyle','none','backgroundcolor','w','horizontalalignment','center');
text(-0.456,1.05,'A','units','normalized','fontweight','bold','fontsize',16)

ax(2)=subplot(2,3,2);
ct=0;
labs=string([]);
labticks=[];
for i=4:6
mutationlog=horzcat(mutations{unique(pt)})'==geneclassification(:,1)';
mutationclass=mutationlog(:,geneclassification(:,2)==genecur{i});
[~,mutationclass]=find(mutationclass);

[N,~,bin]=histcounts(mutationclass,0.5:1:nnz(geneclassification(:,2)==genecur{i})+0.5);
b(i)=barh((ct+1):(ct+nnz(geneclassification(:,2)==genecur{i})),N,'FaceColor',colors(i,:));
labs=[labs;geneclassification(geneclassification(:,2)==genecur{i},1)];
labticks=[labticks,(ct+1):(ct+nnz(geneclassification(:,2)==genecur{i}))];
text(7,ct-1,genelabel{i},'horizontalalignment','center','fontsize',11,'fontweight','bold','color',mean([colors(i,:);0,0,0]))

ct=ct+nnz(geneclassification(:,2)==genecur{i})+5;
set(gca,'YTick',labticks,'YTickLabel',join([repmat(string('\color{black}'),length(labs),1),labs]),...
    'YDir','reverse','box','off','YColor','w','tickdir','out','XTick',[0,5]);
%ax(2).YRuler.Axle.LineStyle = 'none'; 
hold on
end
xlim([0 14])
ylim([0 37])
xlabel('Number of mutations')

ax(3)=subplot(2,3,3);
ct=0;
labs=string([]);
labticks=[];
geneclassification2=geneclassification([1:59,61,62,64:78],:);
mutationlog=horzcat(mutations{unique(pt)})'==geneclassification2(:,1)';
mutationclass=mutationlog(:,~ismember(geneclassification2(:,2),genecur(1:6)));
[~,mutationclass]=find(mutationclass);

[N,~,bin]=histcounts(mutationclass,0.5:1:nnz(~ismember(geneclassification2(:,2),genecur(1:6)))+0.5);
b(7)=barh((ct+1):(ct+nnz(~ismember(geneclassification2(:,2),genecur(1:6)))),N,'FaceColor',colors(7,:));
labs=[labs;geneclassification2(~ismember(geneclassification2(:,2),genecur(1:6)),1)];
labticks=[labticks,(ct+1):(ct+nnz(~ismember(geneclassification2(:,2),genecur(1:6))))];
text(7,ct-1,'Other','horizontalalignment','center','fontsize',11,'fontweight','bold','color',mean([colors(7,:);0,0,0]))
ct=ct+nnz(~ismember(geneclassification2(:,2),genecur(1:6)))+5;
set(gca,'YTick',labticks,'YTickLabel',join([repmat(string('\color{black}'),length(labs),1),labs]),...
    'YDir','reverse','box','off','YColor','w','tickdir','out','XTick',[0,5]);
%ax(3).YRuler.Axle.LineStyle = 'none'; 
xlim([0 14])
ylim([0 37])
xlabel('Number of mutations')
%set(gcf,'InvertHardCopy','off','color','w')

for i=1:7
    b(i).BaseLine.LineStyle='none';
end

mutcount(1)=nnz(RAS(unique(pt))==1);
mutcount(2)=nnz(p53(unique(pt))==1);
mutcount(3)=nnz(pi3k(unique(pt))==1);
mutcount(4)=nnz(cellCycle(unique(pt))==1);
mutcount(5)=nnz(DNAmet(unique(pt))==1);
mutcount(6)=nnz(DNArep(unique(pt))==1);

ax(4)=subplot(2,3,4:6);
hold on
for i=1:6
bar(i,mutcount(i));
end
set(ax(4),'XTick',1:6,'XTickLabel',genelabel,'tickdir','out','XTickLabelRotation',0)
text(-0.12,1.2,'B','units','normalized','fontweight','bold','fontsize',16)
ylabel('Number of patients')
xlabel('Mutation class')
xlim([0.5,6.5])
ax(1).Position=[0.11,0.35,0.21,0.6];
ax(2).Position=[0.44,0.35,0.21,0.6];
ax(3).Position=[0.77,0.35,0.21,0.6];
ax(4).Position=[0.12,0.09,0.87,0.15];
%%
genecur={'RAS','p53','PI3K','cell cycle','DNA methylation','DNA repair'};

genelabel={'RAS/RTK','p53','PI3K','Cell cycle','DNA methylation','DNA repair'};

labs=string([]);
genecount=[];
for i=1
mutationlog=horzcat(mutations{unique(pt)})'==geneclassification(:,1)';
mutationclass=mutationlog(:,geneclassification(:,2)==genecur{i});
[~,mutationclass]=find(mutationclass);

[N,~,bin]=histcounts(mutationclass,0.5:1:nnz(geneclassification(:,2)==genecur{i})+0.5);
genecount((end+1):(end+nnz(geneclassification(:,2)==genecur{i})+2))=[NaN,N,NaN];
labscur=join([repmat("  ",nnz(geneclassification(:,2)==genecur{i}),1),geneclassification(geneclassification(:,2)==genecur{i},1)],2);
labs=[labs;genelabel{i};labscur;''];

end

excstring=['A1:B',num2str(length(labs))];
t=table(labs,genecount','VariableNames',{'Gene','Count'});
writetable(t,'genecount2.xlsx','Sheet',1,'Range',excstring);

labs=string([]);
genecount=[];

for i=2:4
mutationlog=horzcat(mutations{unique(pt)})'==geneclassification(:,1)';
mutationclass=mutationlog(:,geneclassification(:,2)==genecur{i});
[~,mutationclass]=find(mutationclass);

[N,~,bin]=histcounts(mutationclass,0.5:1:nnz(geneclassification(:,2)==genecur{i})+0.5);
genecount((end+1):(end+nnz(geneclassification(:,2)==genecur{i})+2))=[NaN,N,NaN];
labscur=join([repmat("  ",nnz(geneclassification(:,2)==genecur{i}),1),geneclassification(geneclassification(:,2)==genecur{i},1)],2);
labs=[labs;genelabel{i};labscur;''];

end

excstring=['D1:E',num2str(length(labs))];
t=table(labs,genecount','VariableNames',{'Gene','Count'});
writetable(t,'genecount2.xlsx','Sheet',1,'Range',excstring);

labs=string([]);
genecount=[];

for i=5:6
mutationlog=horzcat(mutations{unique(pt)})'==geneclassification(:,1)';
mutationclass=mutationlog(:,geneclassification(:,2)==genecur{i});
[~,mutationclass]=find(mutationclass);

[N,~,bin]=histcounts(mutationclass,0.5:1:nnz(geneclassification(:,2)==genecur{i})+0.5);
genecount((end+1):(end+nnz(geneclassification(:,2)==genecur{i})+2))=[NaN,N,NaN];
labscur=join([repmat("  ",nnz(geneclassification(:,2)==genecur{i}),1),geneclassification(geneclassification(:,2)==genecur{i},1)],2);
labs=[labs;genelabel{i};labscur;''];

end

excstring=['G1:H',num2str(length(labs))];
t=table(labs,genecount','VariableNames',{'Gene','Count'});
writetable(t,'genecount2.xlsx','Sheet',1,'Range',excstring);

labs=string([]);
genecount=[];
geneclassification2=geneclassification([1:59,61,62,64:78],:);
mutationlog=horzcat(mutations{unique(pt)})'==geneclassification2(:,1)';
mutationclass=mutationlog(:,~ismember(geneclassification2(:,2),genecur(1:6)));
[~,mutationclass]=find(mutationclass);

[N,~,bin]=histcounts(mutationclass,0.5:1:nnz(~ismember(geneclassification2(:,2),genecur(1:6)))+0.5);
genecount((end+1):(end+nnz(~ismember(geneclassification2(:,2),genecur(1:6)))+2))=[NaN,N,NaN];
labscur=join([repmat("  ",nnz(~ismember(geneclassification2(:,2),genecur(1:6))),1),geneclassification2(~ismember(geneclassification2(:,2),genecur(1:6)),1)],2);
%labs=[labs;genelabel{i};labscur;''];

labs=[labs;'Other';labscur;''];
t=table(labs,genecount','VariableNames',{'Gene','Count'});

excstring=['J1:K',num2str(length(labs))];
t=table(labs,genecount','VariableNames',{'Gene','Count'});
writetable(t,'genecount2.xlsx','Sheet',1,'Range',excstring);

mutcount(1)=nnz(RAS(unique(pt))==1);
mutcount(2)=nnz(p53(unique(pt))==1);
mutcount(3)=nnz(pi3k(unique(pt))==1);
mutcount(4)=nnz(cellCycle(unique(pt))==1);
mutcount(5)=nnz(DNAmet(unique(pt))==1);
mutcount(6)=nnz(DNArep(unique(pt))==1);
mutcount(7)=nnz(pdl1(unique(pt))==1);

excstring=['A41:B48'];
t=table([genelabel,'PDL-1 overexpression']',mutcount','VariableNames',{'Mutation/Marker','Number of patients'});
writetable(t,'genecount2.xlsx','Sheet',1,'Range',excstring);
%%
function logL=loglik(x,dbfmat,censormat,termmat,t,params)
numparams=(length(x)-4)/2;
x(1:4)=x(1:4).*1e-2;
%x(3:4)=x(3:4)/365;
pr=x(1).*exp(sum(bsxfun(@times,x(5:4+numparams)',params),2,'omitnan'));
pd=x(2).*exp(sum(bsxfun(@times,x(5+numparams:4+numparams*2)',params),2,'omitnan'));

% maxT=max(censormat);
% allT=1:maxT;
% t=NaN(size(dbfmat,1),maxT);
% for i=1:size(dbfmat,1)
%     t(i,1:censormat(i))=allT(1:censormat(i));
% end


br=x(3);%+sum(bsxfun(@times,x(5),params),2,'omitnan');
bd=x(4);%+sum(bsxfun(@times,x(6),params),2,'omitnan');
%bd=br.*exp(x(5));

negflipr=(2*ceil((sign(br)+1)/2)-1);
negflipd=(2*ceil((sign(bd)+1)/2)-1);
pr=0.5 - negflipr/2 + negflipr.*(0.5 - negflipr/2 + negflipr.*pr).*exp(bsxfun(@times,-abs(br),t));
pd=0.5 - negflipd/2 + negflipd.*(0.5 - negflipd/2 + negflipd.*pd).*exp(bsxfun(@times,-abs(bd),t));

% for i=1:size(dbfmat,1)
%     if nnz(~isnan(dbfmat(i,:)))>0
%         if nnz(~isnan(dbfmat(i,:)))>1
%             for j=1:(nnz(~isnan(dbfmat(i,:)))-1)
%                 pr(i,dbfmat(i,j)+1:dbfmat(i,j+1))=pr(i,1:(dbfmat(i,j+1)-dbfmat(i,j)));
%                 pd(i,dbfmat(i,j)+1:dbfmat(i,j+1))=pd(i,1:(dbfmat(i,j+1)-dbfmat(i,j)));
%             end
%         end
%         pr(i,dbfmat(i,find(~isnan(dbfmat(i,:)),1,'last'))+1:censormat(i))=pr(i,1:(censormat(i)-dbfmat(i,find(~isnan(dbfmat(i,:)),1,'last'))));
%         pd(i,dbfmat(i,find(~isnan(dbfmat(i,:)),1,'last'))+1:censormat(i))=pd(i,1:(censormat(i)-dbfmat(i,find(~isnan(dbfmat(i,:)),1,'last'))));
%     end
% end

%pr=pr.*exp(x(7).*mult);
%pd=pd.*exp(x(8).*mult);

probs=1-pr-pd;

sub1=repmat((1:size(dbfmat,1))',1,size(dbfmat,2));
eventHappened=~isnan(dbfmat);
dbfh=dbfmat(eventHappened);
sub1=sub1(eventHappened);

dbfind=sub2ind(size(pr),sub1,dbfh);

sub1=(1:size(dbfmat,1))';
termind=sub2ind(size(pd),sub1(termmat==1),censormat(termmat==1));

probs(dbfind)=pr(dbfind);
probs(termind)=pd(termind);

logL=-sum(sum(log(probs),'omitnan'),'omitnan');
end
%%
function [c,ceq]=sumprob(x,params,t)
numparams=(length(x)-4)/2;
x(1:4)=x(1:4).*1e-2;
%x(3:4)=x(3:4)/365;
pr=x(1).*exp(sum(bsxfun(@times,x(5:4+numparams)',params),2,'omitnan'));
pd=x(2).*exp(sum(bsxfun(@times,x(5+numparams:4+numparams*2)',params),2,'omitnan'));

% maxT=max(censormat);
% allT=1:maxT;
% t=NaN(size(dbfmat,1),maxT);
% for i=1:size(dbfmat,1)
%     t(i,1:censormat(i))=allT(1:censormat(i));
% end


br=x(3);%+sum(bsxfun(@times,x(5),params),2,'omitnan');
bd=x(4);%+sum(bsxfun(@times,x(6),params),2,'omitnan');
%bd=br.*exp(x(5));

negflipr=(2*ceil((sign(br)+1)/2)-1);
negflipd=(2*ceil((sign(bd)+1)/2)-1);
pr=0.5 - negflipr/2 + negflipr.*(0.5 - negflipr/2 + negflipr.*pr).*exp(bsxfun(@times,-abs(br),t));
pd=0.5 - negflipd/2 + negflipd.*(0.5 - negflipd/2 + negflipd.*pd).*exp(bsxfun(@times,-abs(bd),t));
probsum=bsxfun(@plus,pd,pr)-1;
c1=max(max(probsum));
c2=max(max(pr-1));
c3=max(max(pd-1));
c=max([c1,c2,c3]);
ceq=0;
end

%%
% function logL=loglik(x,dbfdiff,laststep,lastevent,termmat,params)
% pr=x(1)';
% pd=x(2)';
% beta=x(5:end)';
% 
% pr=pr.*exp((x(3)+sum(bsxfun(@times,beta(3),params),2,'omitnan')).*(0:4));
% pd=pd.*exp((x(4)+sum(bsxfun(@times,beta(4),params),2,'omitnan')).*(0:4));
% pr=pr.*exp(sum(bsxfun(@times,beta(1),params),2,'omitnan'));
% pd=pd.*exp(sum(bsxfun(@times,beta(2),params),2,'omitnan'));
% %ndbf=sum(dbfdiff>0,2);
% ndbf=dbfdiff>0;
% 
% lasteventind=sub2ind(size(pr),(1:size(pr,1))',lastevent);
% 
% logL=-sum(sum(bsxfun(@times,dbfdiff,log(1-pr(:,1:4)-pd(:,1:4))),2) + laststep.*log(1-pr(lasteventind)-pd(lasteventind)) + sum(ndbf.*log(pr(:,1:4)),2) + termmat.*log(pd(lasteventind)));
% end
% 
% function [c,ceq]=sumprob(x,params)
% pr=x(1)';
% pd=x(2)';
% beta=x(5:end)';
% 
% pr=pr.*exp((x(3)+sum(bsxfun(@times,beta(3),params),2,'omitnan')).*(0:4));
% pd=pd.*exp((x(4)+sum(bsxfun(@times,beta(4),params),2,'omitnan')).*(0:4));
% pr=pr.*exp(sum(bsxfun(@times,beta(1),params),2,'omitnan'));
% pd=pd.*exp(sum(bsxfun(@times,beta(2),params),2,'omitnan'));
% 
% probsum=bsxfun(@plus,pd,pr)-1;
% c1=max(max(probsum));
% c2=max(max(pr-1));
% c3=max(max(pd-1));
% c=max([c1,c2,c3]);
% ceq=0;
% end
%%
% f=@(x)loglik(x,censormat,termmat,ndbf);

% x=fmincon(f,[0.1,0.01],[1,1;1,1],[1;1],[],[],[0;0],[1;1]);


%%
% function logL=loglik(x,censormat,termmat,ndbf)
% pr=x(1);
% pd=x(2);
% nevents=ndbf+termmat;
% 
% logL=-sum((censormat-nevents).*log(1-pr-pd) + ndbf.*log(pr) + termmat.*log(pd));
% end